{"version":3,"sources":["logo.svg","Components/MyHeader.js","Components/MenuExample.js","Components/WebexEntry.js","App.js","reportWebVitals.js","index.js"],"names":["MyHeader","name","Segment","padded","basic","Header","as","textAlign","Component","WebexEntry","Grid","centered","Row","Column","className","Icon","size","columns","stretched","verticalAlign","Button","circular","fluid","href","width","color","React","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"qNAAe,I,+BCUAA,EARE,SAAC,GAAW,EAAVC,KACf,OACI,cAACC,EAAA,EAAD,CAASC,QAAM,EAACC,OAAK,EAArB,SACI,cAACC,EAAA,EAAD,CAAQC,GAAG,KAAKC,UAAU,SAA1B,sC,qBCF6BC,Y,yBCoC1BC,EApCI,kBACf,eAACC,EAAA,EAAD,CAAMC,UAAQ,EAAd,UACI,cAACD,EAAA,EAAKE,IAAN,UACI,cAACF,EAAA,EAAKG,OAAN,CAAaN,UAAU,SAAvB,SACI,eAACL,EAAA,EAAD,WACI,cAACA,EAAA,EAAD,CAASK,UAAU,SAASH,OAAK,EAACD,QAAM,EAACW,UAAU,gBAAnD,SAAoE,cAACC,EAAA,EAAD,CAAMd,KAAK,OAAOe,KAAK,cAC3F,cAACd,EAAA,EAAD,CAASE,OAAK,EAAd,SACI,cAACM,EAAA,EAAD,UACI,eAACA,EAAA,EAAKE,IAAN,CAAUK,QAAS,EAAGC,WAAS,EAACC,cAAc,SAA9C,UACI,cAACT,EAAA,EAAKG,OAAN,IAGA,cAACH,EAAA,EAAKG,OAAN,UACI,cAACX,EAAA,EAAD,CAASE,OAAK,EAAd,SACI,cAACgB,EAAA,EAAD,CAAQC,UAAQ,EAACC,OAAK,EAAtB,2CAER,cAACZ,EAAA,EAAKG,OAAN,UACI,cAACX,EAAA,EAAD,CAASK,UAAU,SAASH,OAAK,EAAjC,SAAkC,oBAAGmB,KAAK,iBAAR,UAAyB,cAACR,EAAA,EAAD,CAAMd,KAAK,YAApC,mDAQ9D,cAACS,EAAA,EAAKE,IAAN,UACI,eAACF,EAAA,EAAKG,OAAN,CAAaW,MAAO,GAAIjB,UAAU,SAAlC,UACI,eAACa,EAAA,EAAD,CAAQC,UAAQ,EAACL,KAAK,QAAtB,UAA8B,cAACD,EAAA,EAAD,CAAMd,KAAK,OAAOwB,MAAM,QAAtD,YACA,eAACL,EAAA,EAAD,CAAQC,UAAQ,EAACL,KAAK,QAAtB,UAA8B,cAACD,EAAA,EAAD,CAAMd,KAAK,QAAQwB,MAAM,QAAvD,iBACA,cAACL,EAAA,EAAD,CAAQC,UAAQ,EAACL,KAAK,QAAQS,MAAM,QAApC,mCCaWC,IAAMlB,U,IAclBmB,EA1Cf,WACE,OAEE,sBAAKb,UAAU,SAAf,UAkBE,cAAC,EAAD,CAAUb,KAAM,UAChB,cAAC,EAAD,QC3BS2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCSdQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAK1BZ,K","file":"static/js/main.a1e9d29a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport { Segment, Header } from \"semantic-ui-react\";\r\nconst MyHeader = ({name}) => {\r\n    return (\r\n        <Segment padded basic>\r\n            <Header as='h1' textAlign='center'>Aabid's Personal Room</Header>\r\n        </Segment>\r\n    )\r\n}\r\n\r\nexport default MyHeader;","import React, { Component } from 'react'\r\nimport { Input, Menu } from 'semantic-ui-react'\r\n\r\nexport default class MenuExample extends Component {\r\n  state = { activeItem: 'home' }\r\n\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n\r\n  render() {\r\n    const { activeItem } = this.state\r\n\r\n    return (\r\n      <Menu inverted stackable>\r\n        <Menu.Item header\r\n          name='My Company'\r\n          active={activeItem === 'company'}\r\n          onClick={this.handleItemClick}\r\n        />\r\n        <Menu.Item\r\n          name='home'\r\n          active={activeItem === 'home'}\r\n          onClick={this.handleItemClick}\r\n        />\r\n        <Menu.Item\r\n          name='messages'\r\n          active={activeItem === 'messages'}\r\n          onClick={this.handleItemClick}\r\n        />\r\n        <Menu.Item\r\n          name='friends'\r\n          active={activeItem === 'friends'}\r\n          onClick={this.handleItemClick}\r\n        />\r\n        <Menu.Menu position='right'>\r\n          <Menu.Item>\r\n            <Input icon='search' placeholder='Search...' />\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            name='logout'\r\n            active={activeItem === 'logout'}\r\n            onClick={this.handleItemClick}\r\n          />\r\n        </Menu.Menu>\r\n      </Menu>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Header, Segment, Grid, GridColumn, Button, Icon } from \"semantic-ui-react\";\r\n\r\nconst WebexEntry = () => (\r\n    <Grid centered>\r\n        <Grid.Row>\r\n            <Grid.Column textAlign='center' >\r\n                <Segment>\r\n                    <Segment textAlign='center' basic padded className=\"Web-Ex-Height\" ><Icon name='play' size='massive' /></Segment>\r\n                    <Segment basic>\r\n                        <Grid>\r\n                            <Grid.Row columns={3} stretched verticalAlign='middle'>\r\n                                <Grid.Column>\r\n\r\n                                </Grid.Column>\r\n                                <Grid.Column>\r\n                                    <Segment basic> \r\n                                        <Button circular fluid>Audio: Use Computer audio</Button></Segment>\r\n                                </Grid.Column>\r\n                                <Grid.Column>\r\n                                    <Segment textAlign=\"center\" basic><a href='www.google.com'><Icon name='setting'/>Test Speaker and Microphone</a></Segment>\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </Segment>\r\n                </Segment>\r\n            </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n            <Grid.Column width={10} textAlign='center'>\r\n                <Button circular size='large'><Icon name='mute' color='red'/>Unmute</Button>\r\n                <Button circular size='large'><Icon name='video' color='red'/>Start Video</Button>\r\n                <Button circular size='large' color='green'>Join Meeting</Button>\r\n            </Grid.Column>\r\n        </Grid.Row>\r\n        \r\n    </Grid>\r\n)\r\n\r\nexport default WebexEntry","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react'\nimport { Button, Input, Menu } from \"semantic-ui-react\";\n// import { MyHeader } from \"./Components/MyHeader\";\nimport MyHeader from \"./Components/MyHeader\";\nimport MenuExample from \"./Components/MenuExample\";\nimport WebexEntry from './Components/WebexEntry';\n\n\n// const MyHeader = ({name}) => {\n//   return (\n//       <div>\n//           <h1>Hello {name}</h1>\n//       </div>\n//   )\n// }\nfunction App() {\n  return (\n    \n    <div className='Web-Ex'>\n      {/* <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div> */}\n      {/* <MenuExample></MenuExample> */}\n      <MyHeader name={\"Aabid\"}/>\n      <WebexEntry></WebexEntry>\n\n    </div>\n  );\n}\n\nclass ShoppingList extends React.Component {\n  render() {\n    let user = {\n      name: \"aabid\",\n      roll: 1\n    }\n    return <div></div>\n    // <div>\n    //   <h1>Hello</h1>\n    // </div>\n\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport ShoppingList from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Button } from \"semantic-ui-react\";\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <ShoppingList />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}